<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Admin</web>
<name>SanityCheck</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent>Admin.Tools</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1374224644000</creationDate>
<date>1262300400000</date>
<contentUpdateDate>1262300400000</contentUpdateDate>
<version>1.1</version>
<title>Database Sanity Check</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>Imported from XAR</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<content>This script is a sanity check of the database. There should be no results to the queries run if the database is in good state.
The data listed are data that should be deleted or fixed.

{{groovy}}
 
  def runQuery(connection, sql) {
     def result = ""
     def stmt = connection.createStatement();
     try {
       def resultset = stmt.executeQuery(sql);
       def mdata = resultset.getMetaData();
       def nbcols = mdata.getColumnCount();
       result += "|="
       for (def i=1;i&lt;=nbcols;i++) {
         result +=  mdata.getColumnName(i);
           if (i!=nbcols)
            result += "|=";
       }
       result += "\n";

       while (true) {
          resultset.next();
          if (resultset.getRow()==0)
            return "";

          result += "|"
          for (i=1;i&lt;=nbcols;i++) {
           def value = resultset.getString(i);
           if ((value==null)||(value==""))
            value = " "
           result += value
           if (i!=nbcols)
            result += "|";
          }
          result+= "\n";
          if (resultset.isLast())         
            break;
       } 
       stmt.close();
    } catch (Exception e2) {
       return "Error running sql: {{{${sql}}}} - " + e2.getMessage();
    } finally {
      stmt.close();
    }
    return result;
   }

    def nbqueries = 0;
    def message = ""
    def context2 = xcontext.getContext();
    def store = xwiki.getXWiki().getStore().getStore();
    store.beginTransaction(context2);
    def session = store.getSession(context2);
    def connection = session.connection();

    def script = xwiki.getDocument("Admin.SanityCheckSQL").getContent().split("\n")
    for (sql in script) {
       if (sql!="") {
        if (sql.startsWith("#"))
         message += sql.substring(1)
        else {
          nbqueries++;
          def res = runQuery(connection, sql); 
          if (res!=""||request.showall=="1") {
           println "=== ${message} ==="
           println res;
          }
          message = ""
        }
       }
    }

    println "${nbqueries} sanity check queries have been run"
{{/groovy}}</content>
<versions>head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2010.01.01.00.00.00;	author XWiki_2EAdmin;	state full;
branches;
next	;


desc
@@


1.1
log
@Imported from XAR
@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;SanityCheck&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374224644000&lt;/creationDate&gt;
&lt;date&gt;1262300400000&lt;/date&gt;
&lt;contentUpdateDate&gt;1262300400000&lt;/contentUpdateDate&gt;
&lt;version&gt;1.1&lt;/version&gt;
&lt;title&gt;Database Sanity Check&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;Imported from XAR&lt;/comment&gt;
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.0&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;This script is a sanity check of the database. There should be no results to the queries run if the database is in good state.
The data listed are data that should be deleted or fixed.

{{groovy}}
 
  def runQuery(connection, sql) {
     def result = ""
     def stmt = connection.createStatement();
     try {
       def resultset = stmt.executeQuery(sql);
       def mdata = resultset.getMetaData();
       def nbcols = mdata.getColumnCount();
       result += "|="
       for (def i=1;i&amp;lt;=nbcols;i++) {
         result +=  mdata.getColumnName(i);
           if (i!=nbcols)
            result += "|=";
       }
       result += "\n";

       while (true) {
          resultset.next();
          if (resultset.getRow()==0)
            return "";

          result += "|"
          for (i=1;i&amp;lt;=nbcols;i++) {
           def value = resultset.getString(i);
           if ((value==null)||(value==""))
            value = " "
           result += value
           if (i!=nbcols)
            result += "|";
          }
          result+= "\n";
          if (resultset.isLast())         
            break;
       } 
       stmt.close();
    } catch (Exception e2) {
       return "Error running sql: {{{${sql}}}} - " + e2.getMessage();
    } finally {
      stmt.close();
    }
    return result;
   }

    def nbqueries = 0;
    def message = ""
    def context2 = xcontext.getContext();
    def store = xwiki.getXWiki().getStore().getStore();
    store.beginTransaction(context2);
    def session = store.getSession(context2);
    def connection = session.connection();

    def script = xwiki.getDocument("Admin.SanityCheckSQL").getContent().split("\n")
    for (sql in script) {
       if (sql!="") {
        if (sql.startsWith("#"))
         message += sql.substring(1)
        else {
          nbqueries++;
          def res = runQuery(connection, sql); 
          if (res!=""||request.showall=="1") {
           println "=== ${message} ==="
           println res;
          }
          message = ""
        }
       }
    }

    println "${nbqueries} sanity check queries have been run"
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@
</versions></xwikidoc>