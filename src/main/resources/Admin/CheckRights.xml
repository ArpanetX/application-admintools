<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Admin</web>
<name>CheckRights</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent>Admin.WebHome</parent>
<creator>xwiki:XWiki.Admin</creator>
<author>xwiki:XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.Admin</contentAuthor>
<creationDate>1375188486000</creationDate>
<date>1375188486000</date>
<contentUpdateDate>1375188486000</contentUpdateDate>
<version>1.1</version>
<title>Check Rights</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<hidden>false</hidden>
<content>&lt;%
println "Add this specific user to the rights view: "

println "&lt;form action='' method='get'&gt;"
if (xwiki.isVirtual()) {
 def url = doc.getURL("view","xpage=uorgsuggest&amp;classname=XWiki.XWikiUsers&amp;wiki=global&amp;uorg=user&amp;")
 println "&lt;input type='text' name='user' autocomplete='off' value='' size='40' onfocus=\"new ajaxSuggest(this, { script: '${url}&amp;', varname:'input' })\" /&gt;"
} else {
def sql = ", BaseObject as obj, StringProperty as fprop, StringProperty as lprop where doc.fullName=obj.name and obj.className='XWiki.XWikiUsers' and obj.id=fprop.id.id and fprop.id.name='first_name' and lprop.id.id=obj.id and lprop.id.name='last_name' order by fprop.value, lprop.value"
println "&lt;select name='user'&gt;"
for (item in xwiki.searchDocuments(sql)) {
 def username = xwiki.getUserName(item, false)
 println "&lt;option value='${item}'&gt;${username}&lt;/option&gt;" 
}
 println "&lt;/select&gt;"
}

println "&lt;input type='submit' value='go'/&gt;&lt;/form&gt;"


def showUserLine(text, user, page) { return showLine(text,user,page,true) }
def showGroupLine(text, user, page) { return showLine(text,user,page,false) }
def showLine(text, user, page, isuser) {
rights = ["view", "comment", "edit", "admin"];
str = text;
for(right in rights) {
str += " | "
if (isuser) { str += xwiki.hasAccessLevel(right, user, page ) } else { str += xwiki.getXWiki().rightService.hasAccessLevel(right, user, page, false, context.context) }
}
return str
}

def showUserTable(page) {
str = "{table}\n"
str += "Group or User|VIEW|COMMENT|EDIT|ADMIN\n"
str += "\n"
if (xwiki.isVirtual()) {
 str += showGroupLine("*Members of Global All Group*", "xwiki:XWiki.XWikiAllGroup", page)
 str += "\n"
}
if (request.user) {
str += showUserLine("*User ${request.user}*", request.user, page)
str += "\n"
}
if (request.group) {
str += showGroupLine("*Group ${request.group}*", request.group, page)
str += "\n"
}
str += "{table}\n"
return str
}

def displayRights(page, classname) {
 def pagedoc = xwiki.getDocument(page)
 def str = "{table}\n"
 str += "Right|Allow|Users|Groups\n"
 for(obj in pagedoc.getObjects(classname)) {
   pagedoc.use(obj)
   def levels = pagedoc.levels
   def allow = pagedoc.allow
   def users = pagedoc.users
   def groups = pagedoc.groups
   str += " ${levels} | ${allow} | ${users} | ${groups} \n"
 }
 str += "{table}\n\n"
 return str
 }
%&gt;

1.1 All the wiki

&lt;%
println showUserTable("Toto.Tata")
%&gt;

1.1 Home Page

&lt;%
println showUserTable("Main.WebHome")
%&gt;

1.1 Spaces with specific rights

&lt;%
for(item in xwiki.searchDocuments(", BaseObject as obj where obj.name=doc.fullName and obj.className='XWiki.XWikiGlobalRights' and doc.name='WebPreferences'", 0, 0)) {
itemdoc = xwiki.getDocument(item)
println "1.1.1 Space ${itemdoc.web}"
println displayRights("${itemdoc.web}.WebPreferences", "XWiki.XWikiGlobalRights")
println showUserTable("${itemdoc.web}.Taratata")
}
%&gt;

1.1 Pages with specific rights

&lt;%
for(item in xwiki.searchDocuments(", BaseObject as obj where obj.name=doc.fullName and obj.className='XWiki.XWikiRights' and doc.web&lt;&gt;'XWiki' and doc.web&lt;&gt;'Questions'", 0, 0)) {
println "1.1.1 Page ${item}"
println displayRights(item, "XWiki.XWikiRights")
println showUserTable(item)
}
%&gt;
</content></xwikidoc>