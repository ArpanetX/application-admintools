<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Admin</web>
<name>CheckIndexes</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent>Admin.Tools</parent>
<creator>xwiki:XWiki.Admin</creator>
<author>xwiki:XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.Admin</contentAuthor>
<creationDate>1262300400000</creationDate>
<date>1262300400000</date>
<contentUpdateDate>1262300400000</contentUpdateDate>
<version>1.1</version>
<title>XWiki Database Indexes Check</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<hidden>false</hidden>
<content>&lt;%
def context2 = context.getContext();
def store = xwiki.getXWiki().getStore().getStore();
def wikilist =  xwiki.isVirtual() ? xwiki.wikimanager.getAllWikis() : [ "xwiki" ];
def indexes = xwiki.getDocument("Admin.CheckIndexesSQL").getContent().split("\n")

if (!wikilist.contains("xwiki"))
 wikilist.add(0, "xwiki")
def creationNeeded = false;
for(wiki in wikilist) {
 creationNeededForThisWiki = false;
try {
  store.beginTransaction(context2);
  def session = store.getSession(context2);
  def connection = session.connection();
  def stmt = connection.createStatement();
  stmt.execute("show indexes from ${wiki}.xwikiattrecyclebin where column_name='xda_deleter'");
  def rset = stmt.getResultSet();
  def result = null;
  try {
    rset.first();
    result = rset.getObject(1);
  } catch (Exception e2) {}
  if (result!=null &amp;&amp; result.equals("xwikiattrecyclebin")) {
   println "* Indexes created for wiki ${wiki}" 
  } else {
   println "* &lt;font color='red'&gt;Indexes not created for wiki ${wiki}&lt;/font&gt;"
   creationNeeded = true;
   creationNeededForThisWiki = true;
  }
  stmt.close();
} catch (Exception e) {
   println "* &lt;font color='red'&gt;Failed to check indexes for wiki ${wiki}&lt;/font&gt;: " + e.getMessage()
} finally { 
  store.endTransaction(context2, false);
}
 if (creationNeededForThisWiki &amp;&amp; request.confirm=="1") {
  try {
    println "* Indexes will be created for wiki ${wiki}"
    store.beginTransaction(context2);
    def session = store.getSession(context2);
    def connection = session.connection();
    connection.setCatalog(wiki.toString());
    for (sql in indexes) {
     println "* Running sql: ${sql}";
    def stmt = connection.createStatement();
    try {
       stmt.execute(sql.replaceAll(";", ""));
       stmt.close();
    } catch (Exception e2) {
       println "* Error running sql: ${sql} " + e2.getMessage();
    } finally {
      stmt.close();
    }
   }
  } catch (Exception e) {
    println "* &lt;font color='red'&gt;Error creating indexes for wiki ${wiki}: &lt;/font&gt;" + e.getMessage();
  } finally { 
    store.endTransaction(context2, false);
  }
 }

}

if (creationNeeded &amp;&amp; request.confirm!="1") {
  println "[Confirm creation of indexes&gt;$doc.fullName?confirm=1]"
}
%&gt;</content></xwikidoc>