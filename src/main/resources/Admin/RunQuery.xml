<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Admin</web>
<name>RunQuery</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent>Admin.Tools</parent>
<creator>xwiki:XWiki.Admin</creator>
<author>xwiki:XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.Admin</contentAuthor>
<creationDate>1262300400000</creationDate>
<date>1262300400000</date>
<contentUpdateDate>1262300400000</contentUpdateDate>
<version>1.1</version>
<title>Run a query on the XWiki Database</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<content>{{groovy}}
  def query = request.query;
  if (query==null)
    query = "show processlist";

println """
{{html clean=="false"}}
&lt;form action=""&gt;
 Query: &lt;input type="text" name="query" value="$escapetool.xml($query)" size="80" /&gt;
 &lt;input type="submit" value="Go" /&gt; 
&lt;/form&gt;
{{/html}}
"""

   if (request.query) {
    def context2 = xcontext.getContext();
    def store = xwiki.getXWiki().getHibernateStore();
    store.beginTransaction(context2);
    def session = store.getSession(context2);
    def connection = session.connection();
    def stmt = connection.createStatement();
    try {
       sql = request.query;
       def resultset = stmt.executeQuery(sql);
       def mdata = resultset.getMetaData();
       def nbcols = mdata.getColumnCount();
       print "|="
       for (def i=1;i&lt;=nbcols;i++) {
         print  mdata.getColumnName(i);
           if (i!=nbcols)
            print "|=";
       }
       println "";
       while (true) {
          resultset.next();
          print "|"
          for (i=1;i&lt;=nbcols;i++) {
           def value = resultset.getString(i);
           if ((value==null)||(value==""))
            value = " "
           print "{{{ ${value} }}}"
           if (i!=nbcols)
            print "|";
          }
          println "";
          if (resultset.isLast())         
            break;
       } 
       stmt.close();
    } catch (Exception e2) {
       println "* Error running sql: {{{${sql}}}} - " + e2.getMessage();
    } finally {
      stmt.close();
      store.endTransaction(context2, true)
    }
   }
{{/groovy}}</content></xwikidoc>