<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Admin</web>
<name>CheckXWikiConfig</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent>Admin.Tools</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1374499788000</creationDate>
<date>1374672655000</date>
<contentUpdateDate>1374672655000</contentUpdateDate>
<version>35.1</version>
<title></title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<content>= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
  def content = Util.getFileContent(xwikicfgdir)
  def is = new ByteArrayInputStream(content.getBytes());
  def props = new Properties();
  props.load(is);
  xwencoding = props.get("xwiki.encoding")
  xwencryptkey = props.get("xwiki.authentication.encryptionKey")
}


def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &gt; -1)
         || (OS.indexOf("windows 2000") &gt; -1 )
         || (OS.indexOf("windows xp") &gt; -1) 
         || (OS.indexOf("windows") &gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&gt;&gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@URIEncoding'
 prot = connector.'@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "* {{error}}tomcat.connectors.encoding : The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it){{/error}}"
}


println "=== XWiki Configuration ==="


if (xwencoding) {
println "* XWiki encoding: ${xwencoding}";
} else {
 println "{{error}}The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it){{/error}}"
}

println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &lt; 800000000) {
 println "* {{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &lt; "1000") {
 println "* {{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (xwencoding &amp;&amp; xwencoding != "UTF-8") {
 println "* {{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}

if (xwencryptkey == "titititititititititititititititi") {
 println "* {{warning}}You should change your encryption key (xwiki.authentication.encryptionKey) and validation key (xwiki.authentication.validationKey) of cookies in xwiki.cfg configuration file {{/warning}}"
}

}
{{/groovy}}</content>
<versions>head	35.1;
access;
symbols;
locks; strict;
comment	@# @;


35.1
date	2013.07.24.15.30.55;	author XWiki_2EAdmin;	state full;
branches;
next	34.1;

34.1
date	2013.07.23.15.20.12;	author XWiki_2EAdmin;	state diff;
branches;
next	33.1;

33.1
date	2013.07.23.15.16.29;	author XWiki_2EAdmin;	state diff;
branches;
next	32.83;

32.83
date	2013.07.20.14.19.30;	author XWiki_2EAdmin;	state diff;
branches;
next	32.82;

32.82
date	2013.07.20.14.19.14;	author XWiki_2EAdmin;	state diff;
branches;
next	32.81;

32.81
date	2013.07.20.14.04.26;	author XWiki_2EAdmin;	state full;
branches;
next	32.80;

32.80
date	2013.07.20.14.03.40;	author XWiki_2EAdmin;	state diff;
branches;
next	32.79;

32.79
date	2013.07.20.13.50.29;	author XWiki_2EAdmin;	state diff;
branches;
next	32.78;

32.78
date	2013.07.20.13.50.11;	author XWiki_2EAdmin;	state diff;
branches;
next	32.77;

32.77
date	2013.07.20.13.49.50;	author XWiki_2EAdmin;	state diff;
branches;
next	32.76;

32.76
date	2013.07.20.13.49.23;	author XWiki_2EAdmin;	state full;
branches;
next	32.75;

32.75
date	2013.07.20.13.48.28;	author XWiki_2EAdmin;	state diff;
branches;
next	32.74;

32.74
date	2013.07.20.13.47.40;	author XWiki_2EAdmin;	state diff;
branches;
next	32.73;

32.73
date	2013.07.20.13.47.21;	author XWiki_2EAdmin;	state diff;
branches;
next	32.72;

32.72
date	2013.07.20.13.46.58;	author XWiki_2EAdmin;	state diff;
branches;
next	32.71;

32.71
date	2013.07.20.13.46.30;	author XWiki_2EAdmin;	state full;
branches;
next	32.70;

32.70
date	2013.07.20.13.43.57;	author XWiki_2EAdmin;	state diff;
branches;
next	32.69;

32.69
date	2013.07.20.13.42.18;	author XWiki_2EAdmin;	state diff;
branches;
next	32.68;

32.68
date	2013.07.20.13.41.56;	author XWiki_2EAdmin;	state diff;
branches;
next	32.67;

32.67
date	2013.07.20.13.40.32;	author XWiki_2EAdmin;	state diff;
branches;
next	32.66;

32.66
date	2013.07.20.12.43.42;	author XWiki_2EAdmin;	state full;
branches;
next	32.65;

32.65
date	2013.07.20.12.42.19;	author XWiki_2EAdmin;	state diff;
branches;
next	32.64;

32.64
date	2013.07.20.12.37.49;	author XWiki_2EAdmin;	state diff;
branches;
next	32.63;

32.63
date	2013.07.20.12.37.31;	author XWiki_2EAdmin;	state diff;
branches;
next	32.62;

32.62
date	2013.07.20.12.36.02;	author XWiki_2EAdmin;	state diff;
branches;
next	32.61;

32.61
date	2013.07.20.12.35.56;	author XWiki_2EAdmin;	state full;
branches;
next	32.60;

32.60
date	2013.07.20.12.35.43;	author XWiki_2EAdmin;	state diff;
branches;
next	32.59;

32.59
date	2013.07.20.12.33.48;	author XWiki_2EAdmin;	state diff;
branches;
next	32.58;

32.58
date	2013.07.20.12.32.20;	author XWiki_2EAdmin;	state diff;
branches;
next	32.57;

32.57
date	2013.07.20.12.31.20;	author XWiki_2EAdmin;	state diff;
branches;
next	32.56;

32.56
date	2013.07.20.12.30.48;	author XWiki_2EAdmin;	state full;
branches;
next	32.55;

32.55
date	2013.07.20.12.29.27;	author XWiki_2EAdmin;	state diff;
branches;
next	32.54;

32.54
date	2013.07.20.12.28.50;	author XWiki_2EAdmin;	state diff;
branches;
next	32.53;

32.53
date	2013.07.20.12.28.36;	author XWiki_2EAdmin;	state diff;
branches;
next	32.52;

32.52
date	2013.07.20.12.27.54;	author XWiki_2EAdmin;	state diff;
branches;
next	32.51;

32.51
date	2013.07.20.12.27.27;	author XWiki_2EAdmin;	state full;
branches;
next	32.50;

32.50
date	2013.07.20.12.26.40;	author XWiki_2EAdmin;	state diff;
branches;
next	32.49;

32.49
date	2013.07.20.12.25.10;	author XWiki_2EAdmin;	state diff;
branches;
next	32.48;

32.48
date	2013.07.20.12.24.59;	author XWiki_2EAdmin;	state diff;
branches;
next	32.47;

32.47
date	2013.07.20.12.23.50;	author XWiki_2EAdmin;	state diff;
branches;
next	32.46;

32.46
date	2013.07.20.12.23.06;	author XWiki_2EAdmin;	state full;
branches;
next	32.45;

32.45
date	2013.07.20.12.22.50;	author XWiki_2EAdmin;	state diff;
branches;
next	32.44;

32.44
date	2013.07.20.12.19.46;	author XWiki_2EAdmin;	state diff;
branches;
next	32.43;

32.43
date	2013.07.20.12.19.36;	author XWiki_2EAdmin;	state diff;
branches;
next	32.42;

32.42
date	2013.07.20.12.19.23;	author XWiki_2EAdmin;	state diff;
branches;
next	32.41;

32.41
date	2013.07.20.12.19.12;	author XWiki_2EAdmin;	state full;
branches;
next	32.40;

32.40
date	2013.07.20.12.18.54;	author XWiki_2EAdmin;	state diff;
branches;
next	32.39;

32.39
date	2013.07.20.12.18.39;	author XWiki_2EAdmin;	state diff;
branches;
next	32.38;

32.38
date	2013.07.20.12.18.07;	author XWiki_2EAdmin;	state diff;
branches;
next	32.37;

32.37
date	2013.07.20.12.17.27;	author XWiki_2EAdmin;	state diff;
branches;
next	32.36;

32.36
date	2013.07.20.12.17.07;	author XWiki_2EAdmin;	state full;
branches;
next	32.35;

32.35
date	2013.07.20.12.16.49;	author XWiki_2EAdmin;	state diff;
branches;
next	32.34;

32.34
date	2013.07.20.12.16.29;	author XWiki_2EAdmin;	state diff;
branches;
next	32.33;

32.33
date	2013.07.20.12.16.06;	author XWiki_2EAdmin;	state diff;
branches;
next	32.32;

32.32
date	2013.07.20.12.15.48;	author XWiki_2EAdmin;	state diff;
branches;
next	32.31;

32.31
date	2013.07.20.12.13.07;	author XWiki_2EAdmin;	state full;
branches;
next	32.30;

32.30
date	2013.07.20.12.11.54;	author XWiki_2EAdmin;	state diff;
branches;
next	32.29;

32.29
date	2013.07.20.12.11.03;	author XWiki_2EAdmin;	state diff;
branches;
next	32.28;

32.28
date	2013.07.20.12.10.27;	author XWiki_2EAdmin;	state diff;
branches;
next	32.27;

32.27
date	2013.07.20.12.05.21;	author XWiki_2EAdmin;	state diff;
branches;
next	32.26;

32.26
date	2013.07.20.12.04.52;	author XWiki_2EAdmin;	state full;
branches;
next	32.25;

32.25
date	2013.07.20.12.03.13;	author XWiki_2EAdmin;	state diff;
branches;
next	32.24;

32.24
date	2013.07.20.12.02.20;	author XWiki_2EAdmin;	state diff;
branches;
next	32.23;

32.23
date	2013.07.20.11.57.30;	author XWiki_2EAdmin;	state diff;
branches;
next	32.22;

32.22
date	2013.07.20.11.57.02;	author XWiki_2EAdmin;	state diff;
branches;
next	32.21;

32.21
date	2013.07.20.11.56.34;	author XWiki_2EAdmin;	state full;
branches;
next	32.20;

32.20
date	2013.07.20.11.56.15;	author XWiki_2EAdmin;	state diff;
branches;
next	32.19;

32.19
date	2013.07.20.11.55.00;	author XWiki_2EAdmin;	state diff;
branches;
next	32.18;

32.18
date	2013.07.20.11.54.47;	author XWiki_2EAdmin;	state diff;
branches;
next	32.17;

32.17
date	2013.07.20.11.54.34;	author XWiki_2EAdmin;	state diff;
branches;
next	32.16;

32.16
date	2013.07.20.11.54.22;	author XWiki_2EAdmin;	state full;
branches;
next	32.15;

32.15
date	2013.07.20.11.52.48;	author XWiki_2EAdmin;	state diff;
branches;
next	32.14;

32.14
date	2013.07.20.11.52.35;	author XWiki_2EAdmin;	state diff;
branches;
next	32.13;

32.13
date	2013.07.20.11.44.33;	author XWiki_2EAdmin;	state diff;
branches;
next	32.12;

32.12
date	2013.07.20.11.33.36;	author XWiki_2EAdmin;	state diff;
branches;
next	32.11;

32.11
date	2013.07.20.11.32.42;	author XWiki_2EAdmin;	state full;
branches;
next	32.10;

32.10
date	2013.07.20.11.32.31;	author XWiki_2EAdmin;	state diff;
branches;
next	32.9;

32.9
date	2013.07.20.11.31.14;	author XWiki_2EAdmin;	state diff;
branches;
next	32.8;

32.8
date	2013.07.20.11.30.35;	author XWiki_2EAdmin;	state diff;
branches;
next	32.7;

32.7
date	2013.07.20.11.29.59;	author XWiki_2EAdmin;	state diff;
branches;
next	32.6;

32.6
date	2013.07.20.11.29.19;	author XWiki_2EAdmin;	state full;
branches;
next	32.5;

32.5
date	2013.07.20.11.28.14;	author XWiki_2EAdmin;	state diff;
branches;
next	32.4;

32.4
date	2013.07.20.11.26.58;	author XWiki_2EAdmin;	state diff;
branches;
next	32.3;

32.3
date	2013.07.20.11.25.45;	author XWiki_2EAdmin;	state diff;
branches;
next	32.2;

32.2
date	2013.07.20.11.25.19;	author XWiki_2EAdmin;	state diff;
branches;
next	32.1;

32.1
date	2013.07.20.11.24.31;	author XWiki_2EAdmin;	state full;
branches;
next	31.28;

31.28
date	2013.07.20.11.24.26;	author XWiki_2EAdmin;	state diff;
branches;
next	31.27;

31.27
date	2013.07.20.11.24.04;	author XWiki_2EAdmin;	state diff;
branches;
next	31.26;

31.26
date	2013.07.20.11.22.02;	author XWiki_2EAdmin;	state diff;
branches;
next	31.25;

31.25
date	2013.07.20.11.21.38;	author XWiki_2EAdmin;	state diff;
branches;
next	31.24;

31.24
date	2013.07.20.11.21.17;	author XWiki_2EAdmin;	state full;
branches;
next	31.23;

31.23
date	2013.07.20.11.21.08;	author XWiki_2EAdmin;	state diff;
branches;
next	31.22;

31.22
date	2013.07.20.11.19.56;	author XWiki_2EAdmin;	state diff;
branches;
next	31.21;

31.21
date	2013.07.20.11.18.32;	author XWiki_2EAdmin;	state diff;
branches;
next	31.20;

31.20
date	2013.07.20.11.18.03;	author XWiki_2EAdmin;	state diff;
branches;
next	31.19;

31.19
date	2013.07.20.11.17.41;	author XWiki_2EAdmin;	state full;
branches;
next	31.18;

31.18
date	2013.07.20.11.17.15;	author XWiki_2EAdmin;	state diff;
branches;
next	31.17;

31.17
date	2013.07.20.11.16.53;	author XWiki_2EAdmin;	state diff;
branches;
next	31.16;

31.16
date	2013.07.20.11.15.54;	author XWiki_2EAdmin;	state diff;
branches;
next	31.15;

31.15
date	2013.07.20.11.15.24;	author XWiki_2EAdmin;	state diff;
branches;
next	31.14;

31.14
date	2013.07.20.11.13.52;	author XWiki_2EAdmin;	state full;
branches;
next	31.13;

31.13
date	2013.07.20.11.11.34;	author XWiki_2EAdmin;	state diff;
branches;
next	31.12;

31.12
date	2013.07.20.11.05.08;	author XWiki_2EAdmin;	state diff;
branches;
next	31.11;

31.11
date	2013.07.20.11.04.39;	author XWiki_2EAdmin;	state diff;
branches;
next	31.10;

31.10
date	2013.07.20.11.04.07;	author XWiki_2EAdmin;	state diff;
branches;
next	31.9;

31.9
date	2013.07.20.11.02.50;	author XWiki_2EAdmin;	state full;
branches;
next	31.8;

31.8
date	2013.07.20.11.02.31;	author XWiki_2EAdmin;	state diff;
branches;
next	31.7;

31.7
date	2013.07.20.11.01.39;	author XWiki_2EAdmin;	state diff;
branches;
next	31.6;

31.6
date	2013.07.20.11.01.24;	author XWiki_2EAdmin;	state diff;
branches;
next	31.5;

31.5
date	2013.07.20.11.00.56;	author XWiki_2EAdmin;	state diff;
branches;
next	31.4;

31.4
date	2013.07.20.11.00.32;	author XWiki_2EAdmin;	state full;
branches;
next	31.3;

31.3
date	2013.07.20.11.00.09;	author XWiki_2EAdmin;	state diff;
branches;
next	31.2;

31.2
date	2013.07.20.10.59.37;	author XWiki_2EAdmin;	state diff;
branches;
next	31.1;

31.1
date	2013.07.20.10.56.51;	author XWiki_2EAdmin;	state diff;
branches;
next	30.1;

30.1
date	2013.07.20.10.56.50;	author XWiki_2EAdmin;	state diff;
branches;
next	29.11;

29.11
date	2013.07.20.10.56.46;	author XWiki_2EAdmin;	state full;
branches;
next	29.10;

29.10
date	2013.07.20.10.56.22;	author XWiki_2EAdmin;	state diff;
branches;
next	29.9;

29.9
date	2013.07.20.10.55.49;	author XWiki_2EAdmin;	state diff;
branches;
next	29.8;

29.8
date	2013.07.20.10.55.31;	author XWiki_2EAdmin;	state diff;
branches;
next	29.7;

29.7
date	2013.07.20.10.49.17;	author XWiki_2EAdmin;	state diff;
branches;
next	29.6;

29.6
date	2013.07.20.10.48.50;	author XWiki_2EAdmin;	state full;
branches;
next	29.5;

29.5
date	2013.07.20.10.48.22;	author XWiki_2EAdmin;	state diff;
branches;
next	29.4;

29.4
date	2013.07.20.10.47.04;	author XWiki_2EAdmin;	state diff;
branches;
next	29.3;

29.3
date	2013.07.20.10.45.26;	author XWiki_2EAdmin;	state diff;
branches;
next	29.2;

29.2
date	2013.07.20.10.44.56;	author XWiki_2EAdmin;	state diff;
branches;
next	29.1;

29.1
date	2013.07.20.10.43.27;	author XWiki_2EAdmin;	state full;
branches;
next	28.1;

28.1
date	2013.07.20.10.39.45;	author XWiki_2EAdmin;	state diff;
branches;
next	27.1;

27.1
date	2013.07.20.10.38.36;	author XWiki_2EAdmin;	state diff;
branches;
next	26.1;

26.1
date	2013.07.20.10.38.19;	author XWiki_2EAdmin;	state diff;
branches;
next	25.1;

25.1
date	2013.07.20.10.37.53;	author XWiki_2EAdmin;	state diff;
branches;
next	24.1;

24.1
date	2013.07.20.10.37.35;	author XWiki_2EAdmin;	state full;
branches;
next	23.1;

23.1
date	2013.07.20.10.36.29;	author XWiki_2EAdmin;	state diff;
branches;
next	22.1;

22.1
date	2013.07.20.10.36.07;	author XWiki_2EAdmin;	state diff;
branches;
next	21.1;

21.1
date	2013.07.20.10.35.55;	author XWiki_2EAdmin;	state diff;
branches;
next	20.1;

20.1
date	2013.07.20.10.35.23;	author XWiki_2EAdmin;	state diff;
branches;
next	19.1;

19.1
date	2013.07.20.10.34.25;	author XWiki_2EAdmin;	state full;
branches;
next	18.1;

18.1
date	2013.07.20.10.33.53;	author XWiki_2EAdmin;	state diff;
branches;
next	17.1;

17.1
date	2013.07.20.10.32.42;	author XWiki_2EAdmin;	state diff;
branches;
next	16.1;

16.1
date	2013.07.20.10.32.06;	author XWiki_2EAdmin;	state diff;
branches;
next	15.1;

15.1
date	2013.07.20.10.31.23;	author XWiki_2EAdmin;	state diff;
branches;
next	14.1;

14.1
date	2013.07.20.10.30.55;	author XWiki_2EAdmin;	state full;
branches;
next	13.1;

13.1
date	2013.07.20.10.29.18;	author XWiki_2EAdmin;	state diff;
branches;
next	12.1;

12.1
date	2013.07.20.10.28.38;	author XWiki_2EAdmin;	state diff;
branches;
next	11.1;

11.1
date	2013.07.20.10.21.44;	author XWiki_2EAdmin;	state diff;
branches;
next	10.1;

10.1
date	2013.07.20.10.17.29;	author XWiki_2EAdmin;	state diff;
branches;
next	9.1;

9.1
date	2013.07.20.10.17.21;	author XWiki_2EAdmin;	state full;
branches;
next	8.1;

8.1
date	2013.07.20.10.15.03;	author XWiki_2EAdmin;	state diff;
branches;
next	7.1;

7.1
date	2013.07.20.10.14.33;	author XWiki_2EAdmin;	state diff;
branches;
next	6.1;

6.1
date	2013.07.20.10.11.23;	author XWiki_2EAdmin;	state diff;
branches;
next	5.1;

5.1
date	2013.07.20.10.10.59;	author XWiki_2EAdmin;	state diff;
branches;
next	4.1;

4.1
date	2013.07.20.10.09.36;	author XWiki_2EAdmin;	state full;
branches;
next	3.2;

3.2
date	2013.07.20.10.03.59;	author XWiki_2EAdmin;	state diff;
branches;
next	3.1;

3.1
date	2013.07.20.09.58.55;	author XWiki_2EAdmin;	state diff;
branches;
next	2.1;

2.1
date	2013.07.20.09.58.45;	author XWiki_2EAdmin;	state diff;
branches;
next	1.1;

1.1
date	2010.01.01.00.00.00;	author XWiki_2EAdmin;	state diff;
branches;
next	;


desc
@@


35.1
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374499788000&lt;/creationDate&gt;
&lt;date&gt;1374672655000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374672655000&lt;/contentUpdateDate&gt;
&lt;version&gt;35.1&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
  def content = Util.getFileContent(xwikicfgdir)
  def is = new ByteArrayInputStream(content.getBytes());
  def props = new Properties();
  props.load(is);
  xwencoding = props.get("xwiki.encoding")
  xwencryptkey = props.get("xwiki.authentication.encryptionKey")
}


def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "* {{error}}tomcat.connectors.encoding : The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it){{/error}}"
}


println "=== XWiki Configuration ==="


if (xwencoding) {
println "* XWiki encoding: ${xwencoding}";
} else {
 println "{{error}}The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it){{/error}}"
}

println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "* {{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "1000") {
 println "* {{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (xwencoding &amp;amp;&amp;amp; xwencoding != "UTF-8") {
 println "* {{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}

if (xwencryptkey == "titititititititititititititititi") {
 println "* {{warning}}You should change your encryption key (xwiki.authentication.encryptionKey) and validation key (xwiki.authentication.validationKey) of cookies in xwiki.cfg configuration file {{/warning}}"
}

}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


34.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374585612000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374585612000&lt;/contentUpdateDate&gt;
&lt;version&gt;34.1&lt;/version&gt;
d176 1
a176 1
if (csize &amp;lt; "500") {
@


33.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374585389000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374585389000&lt;/contentUpdateDate&gt;
&lt;version&gt;33.1&lt;/version&gt;
d51 1
a51 1
  println props
d184 2
d187 2
@


32.83
log
@@
text
@d4 1
a4 1
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
d13 4
a16 4
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374322770000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374322770000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.83&lt;/version&gt;
d21 1
a21 1
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
d51 1
@


32.82
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374322754000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374322754000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.82&lt;/version&gt;
d154 1
a154 1
 println "{{error}}* tomcat.connectors.encoding : The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it){{/error}}"
@


32.81
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374321866000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374321866000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.81&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
  def content = Util.getFileContent(xwikicfgdir)
  def is = new ByteArrayInputStream(content.getBytes());
  def props = new Properties();
  props.load(is);
  xwencoding = props.get("xwiki.encoding")
}


def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "{{error}}The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it){{/error}}"
}


println "=== XWiki Configuration ==="


if (xwencoding) {
println "* XWiki encoding: ${xwencoding}";
} else {
 println "{{error}}The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it){{/error}}"
}

println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "* {{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "* {{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (xwencoding &amp;amp;&amp;amp; xwencoding != "UTF-8") {
 println "* {{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}

}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.80
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374321820000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374321820000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.80&lt;/version&gt;
d172 1
a172 1
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
d176 1
a176 1
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
d179 2
a180 3
/*
if (xwencoding != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
a181 1
*/
@


32.79
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374321029000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374321029000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.79&lt;/version&gt;
d154 1
a154 1
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
d164 1
a164 1
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
@


32.78
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374321011000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374321011000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.78&lt;/version&gt;
d161 1
a161 1
if (xwencoding) ) {
@


32.77
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374320990000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374320990000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.77&lt;/version&gt;
d161 1
a161 1
if (props.get("xwiki.encoding") ) {
@


32.76
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374320963000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374320963000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.76&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
  def content = Util.getFileContent(xwikicfgdir)
  def is = new ByteArrayInputStream(content.getBytes());
  def props = new Properties();
  props.load(is);
  xwencoding = props.get("xwiki.encoding")
}


def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="


if (props.get("xwiki.encoding") 
{
println "* XWiki encoding: ${xwencoding}";
} 
else 
{
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

/*
if (xwencoding != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}
*/

}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.75
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374320908000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374320908000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.75&lt;/version&gt;
d161 2
a162 1
if (props.get("xwiki.encoding") {
d164 3
a166 1
} else {
@


32.74
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374320860000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374320860000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.74&lt;/version&gt;
d160 2
a161 1
/*
d165 1
a165 1
*/
@


32.73
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374320841000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374320841000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.73&lt;/version&gt;
d50 1
a160 1
xwencoding = props.get("xwiki.encoding")
@


32.72
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374320818000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374320818000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.72&lt;/version&gt;
d159 1
a159 1

d164 1
a165 1

d178 1
d182 1
a183 1

@


32.71
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374320790000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374320790000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.71&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
  def content = Util.getFileContent(xwikicfgdir)
  def is = new ByteArrayInputStream(content.getBytes());
  def props = new Properties();
  props.load(is);
}


def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="


if (props) {
xwencoding = props.get("xwiki.encoding")
println "* XWiki encoding: ${xwencoding}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (xwencoding != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.70
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374320637000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374320637000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.70&lt;/version&gt;
d160 1
a160 1
if (props.get("xwiki.encoding") != "") {
@


32.69
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374320538000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374320538000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.69&lt;/version&gt;
a158 1
/*
d160 1
a160 2

if (props.get("xwiki.encoding")) {
a166 1
*/
d179 1
a179 1
/*
a182 1
*/
d184 1
@


32.68
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374320516000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374320516000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.68&lt;/version&gt;
d182 1
a182 1

d186 1
a187 1

@


32.67
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374320432000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374317022000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.67&lt;/version&gt;
d161 2
a163 2

if (xwencoding) {
@


32.66
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374317022000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374317022000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.66&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
  def content = Util.getFileContent(xwikicfgdir)
  def is = new ByteArrayInputStream(content.getBytes());
  def props = new Properties();
  props.load(is);
}


def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="

/*

xwencoding = props.get("xwiki.encoding")

if (xwencoding) {
println "* XWiki encoding: ${xwencoding}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

*/

println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (xwencoding != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.65
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316939000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316939000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.65&lt;/version&gt;
d159 2
d169 1
a170 1

@


32.64
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316669000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316669000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.64&lt;/version&gt;
d33 1
a33 3
class GLOBALS{
  public def appserverpath = "."
}
d36 1
d44 1
a44 2
def getXWikiConfiguration() {
def xwikicfgdir = new File("${GLOBALS.appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
d46 4
a49 5
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);
return props;
a50 1
}
d52 1
d142 1
a142 1
def tomcatconffile = new File("${GLOBALS.appserverpath}/conf/server.xml")
d159 1
a159 1
xwencoding = getXWikiConfiguration().get("xwiki.encoding")
@


32.63
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316651000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316651000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.63&lt;/version&gt;
a34 1
  public def wiki = xcontext.getContext().getWiki()
d36 1
a37 1

@


32.62
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316562000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316562000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.62&lt;/version&gt;
d33 4
a37 2
public appserverpath = "."
def wiki = xcontext.getContext().getWiki()
a38 1

d47 1
a47 1
def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
d146 1
a146 1
def tomcatconffile = new File("${appserverpath}/conf/server.xml")
@


32.61
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374316556000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316556000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.61&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


global appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getXWikiConfiguration() {
def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);
return props;
}
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="

xwencoding = getXWikiConfiguration().get("xwiki.encoding")

if (xwencoding) {
println "* XWiki encoding: ${xwencoding}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}



println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (xwencoding != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.60
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316543000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316543000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.60&lt;/version&gt;
d34 1
a34 1
def appserverpath = "."
a45 1
def appserverpath = "."
@


32.59
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316428000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316428000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.59&lt;/version&gt;
d46 1
@


32.58
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316340000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316340000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.58&lt;/version&gt;
a161 1
def appserverpath = "."
@


32.57
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316280000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316280000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.57&lt;/version&gt;
d46 1
a46 1
def xwikicfgdir = new File("./webapps/xwiki/WEB-INF/xwiki.cfg")
d162 1
a162 1

@


32.56
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374316248000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316248000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.56&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getXWikiConfiguration() {
def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);
return props;
}
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="


xwencoding = getXWikiConfiguration().get("xwiki.encoding")

if (xwencoding) {
println "* XWiki encoding: ${xwencoding}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}



println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (xwencoding != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.55
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316167000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316167000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.55&lt;/version&gt;
d52 1
a52 1
xwencoding = props.get("xwiki.encoding")
a161 1
/*
d163 2
a170 1
*/
d172 1
@


32.54
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316130000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316130000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.54&lt;/version&gt;
d162 1
d170 1
@


32.53
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316116000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316116000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.53&lt;/version&gt;
a167 1
*/
d169 1
@


32.52
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316074000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316074000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.52&lt;/version&gt;
d45 11
a160 10
/*
def getXWikiConfiguration() {
def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);
xwencoding = props.get("xwiki.encoding")
}
d162 1
d181 1
a181 1
/*
a184 1
*/
d186 1
@


32.51
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374316047000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316047000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.51&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="
/*
def getXWikiConfiguration() {
def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);
xwencoding = props.get("xwiki.encoding")
}

if (xwencoding) {
println "* XWiki encoding: ${xwencoding}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}
*/

println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (xwencoding != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.50
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374316000000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374316000000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.50&lt;/version&gt;
d150 1
a150 1

d166 1
@


32.49
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315910000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315910000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.49&lt;/version&gt;
d151 1
d159 1
d161 1
@


32.48
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315899000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315899000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.48&lt;/version&gt;
d159 1
a159 1
println "* XWiki encoding: ${xwencoding})}";
@


32.47
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315830000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315830000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.47&lt;/version&gt;
d157 1
d159 1
a159 1
println "* XWiki encoding: ${props.get("xwiki.encoding")}";
d176 1
a176 1
if (props.get("xwiki.encoding") != "UTF-8") {
@


32.46
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374315786000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315786000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.46&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);
println props
println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if ("${props.get("xwiki.encoding")}" != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.45
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315770000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315770000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.45&lt;/version&gt;
d175 1
a175 1
if (${props.get("xwiki.encoding")} != "UTF-8") {
@


32.44
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315586000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315586000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.44&lt;/version&gt;
a162 1

a174 1
/*
a178 1
*/
@


32.43
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315576000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315576000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.43&lt;/version&gt;
d157 1
a157 1
println props.get("xwiki.encoding")
@


32.42
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315563000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315563000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.42&lt;/version&gt;
d157 1
a157 1

@


32.41
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374315552000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315552000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.41&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="
/*
def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}
*/


println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

/*
if (${props.get("xwiki.encoding")} != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}

*/

}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.40
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315534000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315534000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.40&lt;/version&gt;
d177 1
a177 1

d182 1
@


32.39
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315519000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315519000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.39&lt;/version&gt;
d150 1
a150 1

d162 1
a164 1

@


32.38
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315487000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315487000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.38&lt;/version&gt;
d157 1
a157 1
println props.get("xwiki.encoding")
@


32.37
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315447000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315447000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.37&lt;/version&gt;
d34 1
a34 1
def appserverpath = ".."
d177 1
a177 1
/*
a180 1
*/
d182 1
@


32.36
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374315427000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315427000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.36&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


def appserverpath = ".."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);
println props.get("xwiki.encoding")
println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}



println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; 500) {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

/*
if (${props.get("xwiki.encoding")} != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}
*/

}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.35
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315409000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315409000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.35&lt;/version&gt;
d177 5
a181 3
//if (${props.get("xwiki.encoding")} != "UTF-8") {
// println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
//}
a182 1

@


32.34
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315389000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315389000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.34&lt;/version&gt;
d157 1
a157 1
println props
@


32.33
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315366000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315366000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.33&lt;/version&gt;
d177 3
a179 3
if (${props.get("xwiki.encoding")} != "UTF-8") {
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}
@


32.32
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315348000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315348000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.32&lt;/version&gt;
d178 1
a178 1
 println "{{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}
@


32.31
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374315187000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315187000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.31&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


def appserverpath = ".."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}



println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; 500) {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.30
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315114000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315114000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.30&lt;/version&gt;
d173 1
a173 1
if (csize &amp;lt; "500") {
@


32.29
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315063000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315063000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.29&lt;/version&gt;
a78 1
println "= Config ="
@


32.28
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374315027000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374315027000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.28&lt;/version&gt;
d78 2
@


32.27
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374314721000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314721000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.27&lt;/version&gt;
d77 1
a77 1
println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=recommandations]]"
@


32.26
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374314692000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314692000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.26&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


def appserverpath = ".."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}||anchor=Recommandations]]"
if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}



println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.25
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374314593000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314593000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.25&lt;/version&gt;
d77 1
a77 1
println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc}#Recommandations]]"
@


32.24
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374314540000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314540000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.24&lt;/version&gt;
d77 1
a77 2
println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${cdoc.getFullName}]]"
println doc
@


32.23
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374314250000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314250000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.23&lt;/version&gt;
d78 1
a78 1
println cdoc.getFullName
@


32.22
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374314222000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314222000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.22&lt;/version&gt;
d77 2
a78 2
println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc.getFullName}]]"
println doc.getFullName
@


32.21
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374314194000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314194000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.21&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


def appserverpath = ".."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;${doc.getFullName}]]"
println doc.getName
if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}



println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.20
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374314175000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314175000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.20&lt;/version&gt;
d78 1
a78 1
println doc.getFullName
@


32.19
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374314100000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314100000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.19&lt;/version&gt;
d78 1
a78 1

@


32.18
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374314087000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314087000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.18&lt;/version&gt;
d77 1
a77 1
println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;doc.getFullName]]"
@


32.17
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374314074000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314074000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.17&lt;/version&gt;
d77 1
a77 1
println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;$doc.getFullName]]"
@


32.16
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374314062000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374314062000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.16&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


def appserverpath = ".."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;$doc.getFullName#Recommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}



println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.15
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374313968000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374313968000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.15&lt;/version&gt;
d77 1
a77 1
println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;$doc.FullName#Recommandations]]"
@


32.14
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374313955000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374313955000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.14&lt;/version&gt;
d77 1
a77 1
This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&amp;gt;&amp;gt;$doc.FullName#Recommandations]]
@


32.13
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374313473000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374313473000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.13&lt;/version&gt;
d77 1
@


32.12
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312816000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312816000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.12&lt;/version&gt;
a122 2
println getEnvVars()

@


32.11
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374312762000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312762000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.11&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;


def appserverpath = "."
def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}


if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println getEnvVars()



println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}



println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.10
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312751000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312751000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.10&lt;/version&gt;
d34 1
a34 1
def appserverpath = ".."
@


32.9
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312674000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312674000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.9&lt;/version&gt;
d33 5
a77 3
def wiki = xcontext.getContext().getWiki()
def appserverpath = ".."

a147 1
/*
a162 1
*/
@


32.8
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312635000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312635000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.8&lt;/version&gt;
d146 1
@


32.7
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312599000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312599000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.7&lt;/version&gt;
a134 1
}
a135 2
/*

d141 1
@


32.6
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374312559000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312559000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.6&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}


def wiki = xcontext.getContext().getWiki()
def appserverpath = ".."

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println getEnvVars()

/*

println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)
}

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

*/


println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


32.5
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312494000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312494000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.5&lt;/version&gt;
d123 1
a145 1
/*
@


32.4
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312418000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312418000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.4&lt;/version&gt;
a140 1
}
@


32.3
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312345000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312345000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.3&lt;/version&gt;
a135 1
/*
d146 2
@


32.2
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312319000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312319000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.2&lt;/version&gt;
d134 1
a135 1

@


32.1
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374312271000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312266000&lt;/contentUpdateDate&gt;
&lt;version&gt;32.1&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}


def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println getEnvVars()


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)
}

/*
println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

*/


println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


31.28
log
@@
text
@d14 1
a14 1
&lt;date&gt;1374312266000&lt;/date&gt;
d16 1
a16 1
&lt;version&gt;31.28&lt;/version&gt;
d21 1
a21 1
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
@


31.27
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312244000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312244000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.27&lt;/version&gt;
d133 1
a134 1

@


31.26
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312122000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312122000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.26&lt;/version&gt;
d122 1
a122 1
/*
d134 2
@


31.25
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312098000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312098000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.25&lt;/version&gt;
d119 2
a120 1
println "* LANG :" + getEnvVars().get("LC_ALL")
@


31.24
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374312077000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312077000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.24&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}


def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "*LANG :" + getEnvVars().get("LANG")

/*
println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

*/


println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


31.23
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374312068000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374312068000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.23&lt;/version&gt;
d119 1
a119 1
println "*LANG :",getEnvVars().get("LANG")
@


31.22
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311996000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311996000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.22&lt;/version&gt;
d119 1
a119 3
def envvars = getEnvVars();
def lang = envvars.get("LANG")
println "* LANG: ${lang}"
@


31.21
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311912000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311912000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.21&lt;/version&gt;
a70 1
println getEnvVars()
a116 3
/*


d123 1
a123 1

@


31.20
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311883000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311883000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.20&lt;/version&gt;
d71 1
a71 1
println getEnvVars
@


31.19
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374311861000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311861000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.19&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}



def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


/*


println "=== System environment ==="

def envvars = getEnvVars();
def lang = envvars.get("LANG")
println "* LANG: ${lang}"


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

*/


println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


31.18
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311835000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311835000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.18&lt;/version&gt;
d45 25
d72 2
a118 26
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}
d120 1
@


31.17
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311813000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311813000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.17&lt;/version&gt;
d40 7
d90 1
a90 6
def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
}
@


31.16
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311754000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311754000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.16&lt;/version&gt;
d88 1
a114 1
*/
a116 1
/*
@


31.15
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311724000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311724000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.15&lt;/version&gt;
d88 1
a88 1
*/
@


31.14
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374311632000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311632000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.14&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();

  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
  }

/*
println "=== System environment ==="

def envvars = getEnvVars();
def lang = envvars.get("LANG")
println "* LANG: ${lang}"


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

println "=== XWiki Configuration ==="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

*/


println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


31.13
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311494000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311494000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.13&lt;/version&gt;
d79 1
a79 1
println "== Encoding Configuration=="
d116 1
d159 1
a161 1

@


31.12
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311108000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311108000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.12&lt;/version&gt;
d79 1
d81 1
d83 5
d89 26
d116 45
@


31.11
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311079000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311079000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.11&lt;/version&gt;
a86 4
if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

d91 3
@


31.10
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374311047000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374311047000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.10&lt;/version&gt;
a56 3

println "=== Real Time Infinispan info (if used) ==="

@


31.9
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374310970000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310970000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.9&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache : ${csize}"


println "=== Real Time Infinispan info (if used) ==="

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")

println isize

/*
try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Cache ${csize}"

try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pageexistcache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Exists Cache ${csize}"

*/



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"






println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}



}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


31.8
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310951000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310951000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.8&lt;/version&gt;
d66 2
@


31.7
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310899000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310899000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.7&lt;/version&gt;
d64 1
a64 1
println (mbean==null) ? null : mbean.getProperty("numberOfEntries")
@


31.6
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310884000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310884000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.6&lt;/version&gt;
d64 1
a64 1
(mbean==null) ? null : mbean.getProperty("numberOfEntries")
@


31.5
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310856000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310856000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.5&lt;/version&gt;
d64 1
a64 1
println (mbean==null) ? null : mbean.getProperty("numberOfEntries")
@


31.4
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374310832000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310832000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.4&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache : ${csize}"


println "=== Real Time Infinispan info (if used) ==="

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
println mbean.getProperty("numberOfEntries")

/*
try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Cache ${csize}"

try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pageexistcache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Exists Cache ${csize}"

*/



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"






println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}



}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


31.3
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310809000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310809000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.3&lt;/version&gt;
d63 3
@


31.2
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310777000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310777000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.2&lt;/version&gt;
d61 1
a62 3
mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
csize = (mbean==null) ? 'null' : mbean.getProperty("numberOfEntries")

@


31.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310611000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310606000&lt;/contentUpdateDate&gt;
&lt;version&gt;31.1&lt;/version&gt;
d21 1
a21 1
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
a60 1
def mbean = null
@


30.1
log
@@
text
@d14 1
a14 1
&lt;date&gt;1374310610000&lt;/date&gt;
d16 1
a16 1
&lt;version&gt;30.1&lt;/version&gt;
@


29.11
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374310606000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310606000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.11&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache : ${csize}"


println "=== Real Time Infinispan info (if used) ==="

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
csize = (mbean==null) ? 'null' : mbean.getProperty("numberOfEntries")

/*
try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Cache ${csize}"

try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pageexistcache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Exists Cache ${csize}"

*/



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"






println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}



}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


29.10
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310582000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310582000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.10&lt;/version&gt;
d64 1
a64 1
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
@


29.9
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310549000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310549000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.9&lt;/version&gt;
d63 3
@


29.8
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310531000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310531000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.8&lt;/version&gt;
d63 1
a63 1

d72 1
a72 1
/*
@


29.7
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310157000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310157000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.7&lt;/version&gt;
a56 2
/*
println "=== Real Time Infinspan info (if used) ==="
d58 2
d63 1
d72 1
a83 1
println "=== Real Time JBoss Cache info (if used) ==="
a84 2
println wiki.Param("wiki.store.cache", "200")
println wiki.Param("wiki.store.pageExistCache", "1000")
a85 2


@


29.6
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374310130000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310130000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.6&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache : ${csize}"

/*
println "=== Real Time Infinspan info (if used) ==="

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Cache ${csize}"
try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pageexistcache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Exists Cache ${csize}"

*/

println "=== Real Time JBoss Cache info (if used) ==="

println wiki.Param("wiki.store.cache", "100")
println wiki.Param("wiki.store.pageExistCache", "1000")



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"






println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}



}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


29.5
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310102000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310102000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.5&lt;/version&gt;
d84 2
a85 2
wiki.Param("wiki.store.cache", "100")
wiki.Param("wiki.store.pageExistCache", "1000")
@


29.4
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374310024000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374310024000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.4&lt;/version&gt;
d80 1
d84 2
a85 3
printCacheMaxNodes("Store Page Cache", wiki.store.cache, wiki)
printCacheMaxNodes("Store Page Exists Cache", wiki.store.pageExistCache, wiki)
*/
d88 1
@


29.3
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309926000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309926000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.3&lt;/version&gt;
d57 1
a57 1

d80 1
a80 1
/*
@


29.2
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309896000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309896000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.2&lt;/version&gt;
d80 1
d85 1
a87 1

@


29.1
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374309807000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309807000&lt;/contentUpdateDate&gt;
&lt;version&gt;29.1&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache : ${csize}"


println "=== Real Time Infinspan info (if used) ==="

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Cache ${csize}"
try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pageexistcache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Exists Cache ${csize}"

println "=== Real Time JBoss Cache info (if used) ==="

printCacheMaxNodes("Store Page Cache", wiki.store.cache, wiki)
printCacheMaxNodes("Store Page Exists Cache", wiki.store.pageExistCache, wiki)
}


println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"






println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (csize &amp;lt; "500") {
 println "{{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (wiki.maxMemory() &amp;lt; 800000000) {
 println "{{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}



}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


28.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309585000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309585000&lt;/contentUpdateDate&gt;
&lt;version&gt;28.1&lt;/version&gt;
d58 29
d101 3
@


27.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309516000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309516000&lt;/contentUpdateDate&gt;
&lt;version&gt;27.1&lt;/version&gt;
a74 1
println "{{warning}}"
d77 1
a77 1
 println "Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more."
a79 1

d81 1
a81 1
 println "Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB."
a83 1
println "{{/warning}}"
@


26.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309499000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309499000&lt;/contentUpdateDate&gt;
&lt;version&gt;26.1&lt;/version&gt;
a81 2
println "* Max Memory: ${wiki.maxMemory()}" 

@


25.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309473000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309473000&lt;/contentUpdateDate&gt;
&lt;version&gt;25.1&lt;/version&gt;
d84 1
a84 2
/*
if (wiki.maxMemory &amp;lt; 800000) {
a86 1
*/
@


24.1
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374309455000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309455000&lt;/contentUpdateDate&gt;
&lt;version&gt;24.1&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache : ${csize}"


println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"



println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"
println "{{warning}}"

if (csize &amp;lt; "500") {
 println "Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more."
}


println "* Max Memory: wiki.maxMemory()" 

/*
if (wiki.maxMemory &amp;lt; 800000) {
 println "Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB."
}
*/

println "{{/warning}}"


}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


23.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309389000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309389000&lt;/contentUpdateDate&gt;
&lt;version&gt;23.1&lt;/version&gt;
d82 1
a82 1
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
d85 1
a85 1
if (wiki.maxMemory &amp;lt; "800000") {
@


22.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309367000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309367000&lt;/contentUpdateDate&gt;
&lt;version&gt;22.1&lt;/version&gt;
d82 1
a82 1
//print ${readableSize(wiki.maxMemory())}
@


21.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309355000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309355000&lt;/contentUpdateDate&gt;
&lt;version&gt;21.1&lt;/version&gt;
d82 1
a82 1
print ${readableSize(wiki.maxMemory())}
@


20.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309323000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309323000&lt;/contentUpdateDate&gt;
&lt;version&gt;20.1&lt;/version&gt;
d83 3
a85 1
 if (wiki.maxMemory &amp;lt; "800000") {
d88 1
a89 1

@


19.1
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374309265000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309265000&lt;/contentUpdateDate&gt;
&lt;version&gt;19.1&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache : ${csize}"


println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"



println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"
println "{{warning}}"

if (csize &amp;lt; "500") {
 println "Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more."
}

/*

print ${readableSize(wiki.maxMemory())}
 if (wiki.maxMemory &amp;lt; "800000") {
 println "Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB."
}

*/

println "{{/warning}}"



}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


18.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309233000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309233000&lt;/contentUpdateDate&gt;
&lt;version&gt;18.1&lt;/version&gt;
d75 2
a76 1
println "{{warning}}
d88 2
a91 1
*/
d93 1
@


17.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309162000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309162000&lt;/contentUpdateDate&gt;
&lt;version&gt;17.1&lt;/version&gt;
d75 1
d87 2
@


16.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309126000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309126000&lt;/contentUpdateDate&gt;
&lt;version&gt;16.1&lt;/version&gt;
d50 8
a69 1
println "== Cache configuration =="
a70 3
println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache : ${csize}"
a71 2
/*

d78 3
@


15.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374309083000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309083000&lt;/contentUpdateDate&gt;
&lt;version&gt;15.1&lt;/version&gt;
d68 1
d77 3
a79 3
// if (wiki.maxMemory &amp;lt; "800000") {
// println "Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB."
//}
d81 2
@


14.1
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374309055000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374309055000&lt;/contentUpdateDate&gt;
&lt;version&gt;14.1&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"

println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"

println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache : ${csize}"


println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"
if (csize &amp;lt; "500") {
 println "Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more."
}
print wiki.maxMemory
// if (wiki.maxMemory &amp;lt; "800000") {
// println "Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB."
//}

}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


13.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374308958000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374308958000&lt;/contentUpdateDate&gt;
&lt;version&gt;13.1&lt;/version&gt;
d75 4
a78 3
if (wiki.maxMemory &amp;lt; "800000") {
 println "Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB."
}
@


12.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374308918000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374308918000&lt;/contentUpdateDate&gt;
&lt;version&gt;12.1&lt;/version&gt;
d72 1
a72 1
if (csize &amp;lt; 500) {
d75 1
a75 1
if (wiki.maxMemory &amp;lt; 800000) {
@


11.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374308504000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374308241000&lt;/contentUpdateDate&gt;
&lt;version&gt;11.1&lt;/version&gt;
d64 1
a64 4
println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM). The page exist cache is set by default to 10000 which is good for any instance size."

println "=== Configuration ==="

a66 2
csize = wiki.Param("xwiki.store.cache.pageexistcapacity", "10000")
println "* Store Page Exists Cache : ${csize}"
d68 6
d75 5
@


10.1
log
@@
text
@d14 1
a14 1
&lt;date&gt;1374308249000&lt;/date&gt;
d16 1
a16 1
&lt;version&gt;10.1&lt;/version&gt;
@


9.1
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374308241000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374308241000&lt;/contentUpdateDate&gt;
&lt;version&gt;9.1&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = xcontext.getContext().getWiki()

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"

println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"

println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM). The page exist cache is set by default to 10000 which is good for any instance size."

println "=== Configuration ==="

def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache : ${csize}"
csize = wiki.Param("xwiki.store.cache.pageexistcapacity", "10000")
println "* Store Page Exists Cache : ${csize}"

}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


8.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374308103000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374308103000&lt;/contentUpdateDate&gt;
&lt;version&gt;8.1&lt;/version&gt;
d62 11
@


7.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374308073000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374308073000&lt;/contentUpdateDate&gt;
&lt;version&gt;7.1&lt;/version&gt;
d43 1
a43 1
print "== Memory Configuration =="
d45 4
a48 4
print "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
print "* Max Memory: ${readableSize(wiki.maxMemory())}" 
print "* Current Total: ${readableSize(wiki.totalMemory())}" 
print "* Current Free: ${readableSize(wiki.freeMemory())}"
d50 1
a50 1
print "== Database configuration =="
d52 1
a52 1
print "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
d57 4
a60 4
print "* Max Active (number of possible connections to the DB): $pool.maxActive"
print "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
print "* Active (current active connections to the DB): $pool.numActive"
print "* Idle (current idle connections to the DB): $pool.numIdle"
@


6.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374307883000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374307883000&lt;/contentUpdateDate&gt;
&lt;version&gt;6.1&lt;/version&gt;
d43 1
a43 1
println "== Memory Configuration =="
d45 4
a48 4
 println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 300Mb. A large one with at least  700Mb, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
 println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
 println "* Current Total: ${readableSize(wiki.totalMemory())}" 
 println "* Current Free: ${readableSize(wiki.freeMemory())}"
d50 12
@


5.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374307859000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374307859000&lt;/contentUpdateDate&gt;
&lt;version&gt;5.1&lt;/version&gt;
d41 1
a41 1
print wiki
d43 1
a44 2
 println "== Memory Configuration =="

@


4.1
log
@@
text
@&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xwikidoc&gt;
&lt;web&gt;Admin&lt;/web&gt;
&lt;name&gt;CheckXWikiConfig2&lt;/name&gt;
&lt;language&gt;&lt;/language&gt;
&lt;defaultLanguage&gt;&lt;/defaultLanguage&gt;
&lt;translation&gt;0&lt;/translation&gt;
&lt;parent&gt;Admin.Tools&lt;/parent&gt;
&lt;creator&gt;XWiki.Admin&lt;/creator&gt;
&lt;author&gt;XWiki.Admin&lt;/author&gt;
&lt;customClass&gt;&lt;/customClass&gt;
&lt;contentAuthor&gt;XWiki.Admin&lt;/contentAuthor&gt;
&lt;creationDate&gt;1374307115000&lt;/creationDate&gt;
&lt;date&gt;1374307776000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374307776000&lt;/contentUpdateDate&gt;
&lt;version&gt;4.1&lt;/version&gt;
&lt;title&gt;&lt;/title&gt;
&lt;defaultTemplate&gt;&lt;/defaultTemplate&gt;
&lt;validationScript&gt;&lt;/validationScript&gt;
&lt;comment&gt;&lt;/comment&gt;
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
&lt;syntaxId&gt;xwiki/2.1&lt;/syntaxId&gt;
&lt;hidden&gt;false&lt;/hidden&gt;
&lt;content&gt;= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

def readableSize(size) {
    if(size &amp;lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def wiki = context.getContext().getWiki()

if (wiki!=null){

 println "== Memory Configuration =="

 println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 300Mb. A large one with at least  700Mb, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
 println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
 println "* Current Total: ${readableSize(wiki.totalMemory())}" 
 println "* Current Free: ${readableSize(wiki.freeMemory())}"

}
{{/groovy}}&lt;/content&gt;&lt;/xwikidoc&gt;
@


3.2
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374307439000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374307439000&lt;/contentUpdateDate&gt;
&lt;version&gt;3.2&lt;/version&gt;
d21 1
a21 1
&lt;minorEdit&gt;true&lt;/minorEdit&gt;
a32 3
 // Sets the tomcat path to use
def appserverpath = ".."

d37 1
a37 2
    return new DecimalFormat("#,{{velocity filter="none"}}
##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
a39 6
def printCacheMaxNodes(message, cache, wiki) {
 def evictionregionconfig = wiki.getPrivateField(cache,"jbosscacheConfiguration")?.getJBossCacheConfiguration()?.getEvictionConfig()?.getEvictionRegionConfig("/")
 def maxnodes = (evictionregionconfig==null) ? null : evictionregionconfig.getEvictionAlgorithmConfig().getMaxNodes()
 println "* ${message}: ${maxnodes}"
}

a40 2
if (wiki!=null) {
println "== Memory Configuration =="
d42 1
a42 4
println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 300Mb. A large one with at least 700Mb, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory. "
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"
d44 1
a44 1
println "== Database configuration =="
d46 4
a49 4
println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activiy on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")
a50 42
println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"

println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM). The page exist cache is set by default to 10000 which is good for any instance size."

println "== Configuration =="

def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache ${csize}"
csize = wiki.Param("xwiki.store.cache.pageexistcapacity", "10000")
println "* Store Page Exists Cache ${csize}"

println "== Real Time Infinspan info (if used) =="

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Cache ${csize}"
try {
 mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pageexistcache(local)",manager="XWikiCacheManager",component=Statistics')
} catch (Exception e) {}
csize = null
try {
csize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
} catch (Exception e) {}
println "* Store Page Exists Cache ${csize}"

println "== Real Time JBoss Cache info (if used) =="

printCacheMaxNodes("Store Page Cache", wiki.store.cache, wiki)
printCacheMaxNodes("Store Page Exists Cache", wiki.store.pageExistCache, wiki)
a51 109

println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"

def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  // System.out.println(OS);
  if (OS.indexOf("windows 9") &amp;gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &amp;gt; -1)
         || (OS.indexOf("windows 2000") &amp;gt; -1 )
         || (OS.indexOf("windows xp") &amp;gt; -1) 
         || (OS.indexOf("windows") &amp;gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
  }


println "== System environment =="

def envvars = getEnvVars();
def lang = envvars.get("LANG")
println "* LANG: ${lang}"


println "== Java command line =="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "== Tomcat configuration =="
for (connector in node.Service.Connector) {
 urienc = connector.'@@URIEncoding'
 prot = connector.'@@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}

println "== XWiki Configuration =="

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
def content = Util.getFileContent(xwikicfgdir)
def is = new ByteArrayInputStream(content.getBytes());
def props = new Properties();
props.load(is);

println "* XWiki encoding: ${props.get("xwiki.encoding")}";
} else {
 println "The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}


println "== XWiki web.xml =="

def xwikiwebxml = new File("${appserverpath}/webapps/xwiki/WEB-INF/web.xml")

if (xwikiwebxml.exists()) {
def wnode = new XmlParser().parse(xwikiwebxml)
def found = false;
for (filter in wnode.filter) {
 def filterclass = filter.'filter-class'
 if (filterclass.text().equals("com.xpn.xwiki.web.SetCharacterEncodingFilter")) {
   for (initparam in  filter.'init-param') {
   def paramname = initparam.'param-name'.text();
   def paramvalue = initparam.'param-value'.text();
   if (paramname=="encoding") {
     println "* web.xml encoding: ${paramvalue}
{{/velocity}}"
     found = true
   }
  }
 }
}
if (found==false) {
     println "The web.xml encoding param could not be found"
}
} else {
 println "The XWiki web.xml could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it)"
}
@


3.1
log
@@
text
@d14 3
a16 3
&lt;date&gt;1374307135000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374307135000&lt;/contentUpdateDate&gt;
&lt;version&gt;3.1&lt;/version&gt;
d21 1
a21 1
&lt;minorEdit&gt;false&lt;/minorEdit&gt;
a32 2
 //
 //
d34 1
a34 6
 //
 //
 def appserverpath = ".."
 //
 //
 //
d52 1
a52 1
println "1.1 Memory Configuration"
d59 1
a59 1
println "1.1 Database configuration"
d71 1
a71 1
println "1.1 Cache configuration"
d75 1
a75 1
println "1.1.1 Configuration"
d82 1
a82 1
println "1.1.1 Real Time Infinspan info (if used)"
d104 1
a104 1
println "1.1.1 Real Time JBoss Cache info (if used)"
d110 1
a110 1
println "1.1 Encoding Configuration"
d148 1
a148 1
println "1.1.1 System environment"
d155 1
a155 1
println "1.1.1 Java command line"
d166 1
a166 1
println "1.1.1 Tomcat configuration"
d176 1
a176 1
println "1.1.1 XWiki Configuration"
d191 1
a191 1
println "1.1.1 XWiki web.xml"
@


2.1
log
@Document converted from syntax xwiki/1.0 to syntax xwiki/2.1
@
text
@d14 3
a16 3
&lt;date&gt;1374307125000&lt;/date&gt;
&lt;contentUpdateDate&gt;1374307125000&lt;/contentUpdateDate&gt;
&lt;version&gt;2.1&lt;/version&gt;
d20 1
a20 1
&lt;comment&gt;Document converted from syntax xwiki/1.0 to syntax xwiki/2.1&lt;/comment&gt;
@


1.1
log
@Imported from XAR
@
text
@d4 1
a4 1
&lt;name&gt;CheckXWikiConfig&lt;/name&gt;
d13 4
a16 4
&lt;creationDate&gt;1374224639000&lt;/creationDate&gt;
&lt;date&gt;1262300400000&lt;/date&gt;
&lt;contentUpdateDate&gt;1262300400000&lt;/contentUpdateDate&gt;
&lt;version&gt;1.1&lt;/version&gt;
d20 1
a20 1
&lt;comment&gt;Imported from XAR&lt;/comment&gt;
d22 1
a22 1
&lt;syntaxId&gt;xwiki/1.0&lt;/syntaxId&gt;
d24 1
a24 1
&lt;content&gt;1 XWiki Configuration Check
d26 1
a26 1
&amp;lt;%
d47 2
a48 1
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
d212 2
a213 1
     println "* web.xml encoding: ${paramvalue}"
d225 1
a225 1
%&amp;gt;&lt;/content&gt;&lt;/xwikidoc&gt;
@
</versions></xwikidoc>