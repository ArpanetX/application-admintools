<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Admin</web>
<name>UsedSpace</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent>Admin.Tools</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1374224647000</creationDate>
<date>1374581393000</date>
<contentUpdateDate>1374581393000</contentUpdateDate>
<version>1.1</version>
<title>Space Used</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<content>The following page shows the space used by usually biggest tables.

__xwikirecyclebin__ : Here is store the deleted documents. You can shrink the recycle bin [[here&gt;&gt;Admin.ShrinkRecycleBins]].
__xwikircs__ : Versioning of documents.

{{warning}}The following tables will not be shown if you're using [[Filesystem Attachment feature&gt;&gt;http://platform.xwiki.org/xwiki/bin/view/AdminGuide/Attachments#HFilesystemAttachmentStore]].{{/warning}}
__xwikiattachment_content__ : Stores the content of attachments in database.
__xwikiattachment_archive__ : Versioning of attachments
__xwikiattrecyclebin__ : Recycle bin of attachments.

{{groovy}}

private static boolean isFilesystemStore(final Object store)
{
    return store.getClass().getName().contains("Filesystem");
}

// Check if current wiki is configured in FS attachment mode.
fsstore = isFilesystemStore(xcontext.getContext().getWiki().getAttachmentStore())

def dbs = []
services.wikimanager ? services.wikimanager.getAllWikis() : dbs.add(xcontext.getMainWikiName())

String Query(table,schema){
    def context = xcontext.getContext();
    def store = xwiki.getXWiki().getHibernateStore();
    store.beginTransaction(context);
    def session = store.getSession(context);
    def connection = session.connection();
    def stmt = connection.createStatement();
    try {
       sql = "select sum(round(data_length/1024/1024,2)) as '${table}' from information_schema.tables where table_name='${table}' and table_schema='${schema}';"
       def resultset = stmt.executeQuery(sql);
       def mdata = resultset.getMetaData();
       def nbcols = mdata.getColumnCount();
       print "|="
       for (def i=1;i&lt;=nbcols;i++) {
         print  mdata.getColumnName(i);
           if (i!=nbcols)
            print "|=";
       }
       while (true) {
          resultset.next();
          print "|"
          for (i=1;i&lt;=nbcols;i++) {
           def value = resultset.getString(i);
           if ((value==null)||(value==""))
            value = " "
           print "{{{ ${value}MB }}}"
           if (i!=nbcols)
            print "|";
          }
          println "";
          if (resultset.isLast())         
            break;
       } 
       stmt.close();
    } catch (Exception e2) {
       println "* Error running sql: {{{${sql}}}} - " + e2.getMessage();
    } finally {
      stmt.close();
      store.endTransaction(context, true)
    }
}

def tables = fsstore ? ['xwikirecyclebin','xwikircs'] : ['xwikirecyclebin','xwikircs','xwikiattachment_content','xwikiattachment_archive','xwikiattrecyclebin']
for(schema in dbs){
  println "== Used space of wiki ${schema} =="
  for(table in tables){
    Query(table,schema)
  }
}
 

{{/groovy}}

{{velocity}}

== Recommandations ==


#if($fsstore != true)
{{warning}}It appears that you're not using the filesystem attachment store feature. You should use it if you plan to have large documents in your wiki. This version is available since XWiki 3.4. More information [[here&gt;&gt;http://platform.xwiki.org/xwiki/bin/view/AdminGuide/Attachments#HFilesystemAttachmentStore]]{{/warning}}
#end

{{/velocity}}</content></xwikidoc>
