<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Admin</web>
<name>CheckProgrammingRights</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent>Admin.WebHome</parent>
<creator>xwiki:XWiki.Admin</creator>
<author>xwiki:XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.Admin</contentAuthor>
<creationDate>1262300400000</creationDate>
<date>1341613824000</date>
<contentUpdateDate>1341613824000</contentUpdateDate>
<version>1.1</version>
<title>Check programming rights</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<content>{{groovy}}
def context2 = xcontext.getContext();

def wikilist =  xwiki.isVirtualMode() ? xwiki.getPlugin("wikimanager")?.getAllWikis() : [ "xwiki" ];
def knownpageslist = ["Main.Spaces", "Main.Activity", "Main.SpaceIndex", "AnnotationCode.Style", "AnnotationCode.Script", "AnnotationCode.Settings"];

def db = context2.getDatabase()
try {
for(wiki in wikilist) {
 def wikiname = wiki.toString()
 println "* ${wikiname}"
 context2.setDatabase(wikiname)
 // get all the pages which have a required rights object attached to them, that specifies either edit or programming and save it
 def pagelist = xwiki.search("select distinct doc.fullName from XWikiDocument doc, BaseObject obj, StringProperty rightProp where obj.name = doc.fullName and obj.className='XWiki.RequiredRightClass' and rightProp.id.id = obj.id and rightProp.id.name='level' and (rightProp.value='programming' or rightProp.value='edit')")
 // add the known pages that need to be saved with programming || edit rights to the list of pages, if they don't have the required rights object
 for (knownpage in knownpageslist) {
   if (!pagelist.contains(knownpage) &amp;&amp; xwiki.exists(knownpage)) {
      pagelist.add(knownpage)  
   } 
 }
 for (page in pagelist) {
    print "** fixing ${page}"
    def pagedoc = xwiki.getDocument(page)
    if (request.confirm) {
      pagedoc.save("Saving for programming or edit rights")
      println(" ** Saved **")
    } else {
      println("")
    }
 }
}
} finally {
 context2.setDatabase(db)
}

println ""
if (request.confirm!="1") {
  println "{{info}} You need to run this with a user that has programming rights, otherwise confirming will have no effect. {{/info}}\n\n{{html}}&lt;form action='' method='post'&gt;&lt;input type='submit' value='Confirm give programming and edit rights' /&gt; &lt;input type='hidden' name='confirm' value='1' /&gt;&lt;/form&gt;{{/html}}"
}
{{/groovy}}</content></xwikidoc>
